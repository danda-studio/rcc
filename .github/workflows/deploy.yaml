name: Build & Deploy Backend (.NET)

on:
  push:
    branches:
      - feature/ulBAmKpj
    paths:
      - 'backend/**'
      - '.github/workflows/deploy.yml'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore backend/RCC/RCC/RCC.csproj

      - name: Build and publish
        run: dotnet publish backend/RCC/RCC/RCC.csproj -c Release -o publish --no-restore

      - name: Clean and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_KEY }}
          script: |
            sudo systemctl stop rck-backend.service || true
            rm -rf ${{ secrets.DEPLOY_PATH }}/* || true
            mkdir -p ${{ secrets.DEPLOY_PATH }}
      
      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.7
        env:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
        with:
          source: 'publish/*'
          target: ${{ secrets.DEPLOY_PATH }}
          
      - name: Verify deployment
        uses: appleboy/ssh-action@v0.1.7
        env:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
        with:
          script: |
            echo "Files in deploy path:"
            ls -la ${{ secrets.DEPLOY_PATH }}
            echo "Service status:"
            sudo systemctl status rck-backend.service --no-pager

      - name: Restart backend service
        uses: appleboy/ssh-action@v0.1.7
        env:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
        with:
          script: |
            sudo systemctl restart rck-backend.service
